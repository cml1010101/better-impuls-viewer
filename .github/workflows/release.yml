name: Build and Release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: linux
            file_extension: .AppImage
          - os: windows-latest
            artifact_name: windows  
            file_extension: .exe
          - os: macos-latest
            artifact_name: macos
            file_extension: .dmg
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install backend dependencies
        run: |
          pip install -r requirements.txt
          
      - name: Install root dependencies
        run: npm ci
        
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci
          
      - name: Build Electron app
        run: npm run dist
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Find build artifacts
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            BUILD_FILE=$(find dist/ -name "*.AppImage" | head -1)
          elif [ "${{ matrix.os }}" = "windows-latest" ]; then
            BUILD_FILE=$(find dist/ -name "*.exe" | head -1)
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            BUILD_FILE=$(find dist/ -name "*.dmg" | head -1)
          fi
          echo "BUILD_FILE=$BUILD_FILE" >> $GITHUB_ENV
          echo "Found build file: $BUILD_FILE"
          ls -la dist/
          
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.BUILD_FILE }}
          asset_name: better-impuls-viewer-${{ matrix.artifact_name }}-${{ github.event.release.tag_name }}${{ matrix.file_extension }}
          asset_content_type: application/octet-stream